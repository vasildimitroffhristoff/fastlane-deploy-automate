# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

# before_all do |lane, options|
#   ensure_git_branch(
#     branch: 'develop'
#   )
#   git_pull()
# end

platform :android do
  desc "Update version number and version name ..."
    lane :update_version do     
      increment_version_code()
      android_set_version_name(
        version_name: "1.23.4"
      )
      # git pull  develop branch
      # option for version name
      # git add . git commit git push
    
    end  

  desc "Test command ..."
    lane :test do 
      last_git_tag()
    end   
    
    lane :bump_version do |options|
      type = options.fetch(:type)
    
      case type
      when "major", "minor", "patch"
        increment_version_code()
        # increment_version_number(bump_type: type)
        android_set_version_name(
          version_name: options[:build_number]
      )
      else
        raise "Invalid bump type '#{type}'"
      end

      git_add(path: "./*")
      git_commit(path: "./*", message: "Version Bump to #{options[:build_number]}")

      push_to_git_remote(
        remote: "origin",         # optional, default: "origin"
        local_branch: "develop",  # optional, aliased by "branch", default is set to current branch
        remote_branch: "develop", # optional, default is set to local_branch
        force: true,    # optional, default: false
        force_with_lease: true,   # optional, default: false
        tags: false,    # optional, default: true
        no_verify: true,# optional, default: false
        set_upstream: true        # optional, default: false
      )
      # commit_tag_and_push_version_bump
    end
     

  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
  #   gradle(task: "clean assembleRelease")
  #   crashlytics
  
  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here
  # end

  # desc "Deploy a new version to the Google Play"
  # lane :deploy do
  #   gradle(task: "clean assembleRelease")
  #   upload_to_play_store
  # end
end
